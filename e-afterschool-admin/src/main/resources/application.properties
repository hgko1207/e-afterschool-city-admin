# -----------------------------------------------------------
# Server Settings
# -----------------------------------------------------------
server.servlet.context-path=/admin
server.port=8081

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# 도메인을 지정해야지만 하나의 톰캣에서 여러 스프링 부트 프로젝트를 실행할 수 있다.
spring.jmx.default-domain=admin

spring.devtools.livereload.enabled=true

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# -----------------------------------------------------------
# Database Settings
# -----------------------------------------------------------
spring.datasource.url=jdbc:mysql://45.120.69.106:3306/e_afterschool?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Seoul
spring.datasource.username=ysc2019
spring.datasource.password=kei*226441

#spring.datasource.url=jdbc:mysql://localhost:3306/e_afterschool?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=inspace

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.tomcat.validation-query=SELECT 1

# -----------------------------------------------------------
# JPA Settings
# -----------------------------------------------------------
# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다. ex) 테이블 생성, 삭제 등 
spring.jpa.generate-ddl=true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

# -----------------------------------------------------------
# Logging Settings
# -----------------------------------------------------------
debug=false
#
#logging.level.org.hibernate.SQL=INFO
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO
#logging.level.org.springframework.security=INFO